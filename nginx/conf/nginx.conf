user  www;
worker_processes  8;
worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;
worker_rlimit_nofile 102400;

events {
    use epoll;
    worker_connections  102400;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;
	
    client_max_body_size  200m;
    lua_need_request_body on;
    port_in_redirect off;
    client_header_buffer_size 4k;	
    keepalive_timeout  60;

    lua_shared_dict limit 10m;
	
    lua_package_path "/usr/local/openresty/nginx/conf/ngx-waf/?.lua";
    init_by_lua_file  /usr/local/openresty/nginx/conf/ngx-waf/init.lua; 
    access_by_lua_file /usr/local/openresty/nginx/conf/ngx-waf/waf.lua; 	
	
    #gzip  on;
	
    upstream www.test.com {    
		server 191.0.0.27:8080;		
    }
	
    server {
        listen       8080;
        server_name  localhost;

        charset utf-8;

        #access_log  logs/host.access.log  main;

        location / {
	     proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header REMOTE-HOST $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	     default_type  text/html;
	     content_by_lua_file "/usr/local/openresty/nginx/conf/ngx-waf/lua";
        }

	location /nodejs {
                internal;
                proxy_pass http://127.0.0.1:8888/;
        }

	location /proxy {
                internal;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header REMOTE-HOST $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_redirect          off;
                proxy_pass http://www.test.com$request_uri;
    	}	
	}
}
